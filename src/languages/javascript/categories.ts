import { ICategory } from '../../utils/interfaces';
import { signs } from './sintax';

export const categories: ICategory[]  = [
	{
		title: 'Variáveis, Constantes e Valores',
		id: 'Var',
		icon: 'tags',
		tooltip: 'var',
		signs: [
			signs.functionConsoleLog,
			signs.reservedLet,
			signs.reservedConst,
			signs.assignment,
			signs.reservedVar,
			signs.stringApostropheBegin,
			signs.reservedTrue,
			signs.reservedFalse,
			signs.reservedNull,
			signs.reservedUndefined,
			signs.reservedTypeof,
		],
	},
	{
		title: 'Operadores Matemáticos',
		id: 'Math',
		icon: 'calculator',
		tooltip: 'math',
		signs: [
			signs.plusOrConcat,
			signs.minus,
			signs.times,
			signs.division,
			signs.modulus,
			signs.power,
			//signs.groupBegin,
			//signs.increment,
			//signs.decrement,
		],
	},
	{
		title: 'Estruturas de Condição e Operadores Relacionais',
		id: 'Conditional',
		icon: 'code-compare',
		tooltip: 'relational',
		signs: [
			signs.reservedIf,
			signs.equalStrict,
			signs.equal,
			signs.differentStrict,
			signs.different,
			signs.greaterEqual,
			signs.greater,
			signs.lesserEqual,
			signs.lesser,
			signs.reservedElse,
			//signs.reservedSwitch,
			//signs.reservedCase,
			//signs.reservedBreak,
			//signs.reservedDefault,
			//signs.ternaryIf,
			//signs.ternaryElseOrPropertyValue,
			//signs.nullCoalesc,
		],
	},
	{
		title: 'Operadores Lógicos',
		id: 'Logical',
		icon: 'flag',
		tooltip: 'logical',
		signs: [
			signs.not,
			signs.and,
			signs.or,
			//signs.bitwiseNot,
			//signs.bitwiseAnd,
			//signs.bitwiseOr,
			//signs.bitwiseXor,
			//signs.bitwiseShiftLeft,
			//signs.bitwiseShiftRight,
			//signs.bitwiseShiftUnsigned,
		],
	},
	/*
	{
		title: 'Estruturas de Repetição',
		id: 'Repetition',
		icon: 'rotate-left',
		tooltip: 'repetition',
		signs: [
			signs.reservedWhile,
			signs.reservedDo,
			signs.reservedFor,
			signs.reservedIn,
			signs.reservedOf,
			signs.reservedBreak,
			signs.reservedContinue,
		],
	},
	{
		title: 'Funções',
		id: 'Function',
		icon: 'gears',
		tooltip: 'function',
		signs: [
			signs.reservedFunction,
			signs.reservedReturn,
			signs.reservedVoid,
			signs.functionArrow,
			signs.reservedYield,
			signs.reservedArguments,
			signs.reservedAsync,
			signs.reservedAwait,
			signs.reservedFunctionGenerator,
			signs.reservedYieldGenerator,
		],
	},
	{
		title: 'Tratamento de Exceção e Depuração',
		id: 'Exception',
		icon: 'triangle-exclamation',
		tooltip: 'exception',
		signs: [
			signs.reservedTry,
			signs.reservedCatch,
			signs.reservedFinally,
			signs.reservedThrow,
			signs.reservedDebugger,
		],
	},
	{
		title: 'Vetores e Objetos',
		id: 'Object',
		icon: 'object-group',
		tooltip: 'object',
		signs: [
			signs.blockOrObjectBegin,
			signs.arrayBegin,
			signs.reservedNew,
			signs.reservedThis,
			signs.reservedSuper,
			signs.chain,
			signs.chainOptional,
			signs.reservedInstanceof,
			signs.reservedDelete,
		],
	},
	{
		title: 'Classes',
		id: 'Class',
		icon: 'sitemap',
		tooltip: 'class',
		signs: [
			signs.reservedClass,
			signs.reservedConstructor,
			signs.reservedGet,
			signs.reservedSet,
			signs.reservedExtends,
			signs.reservedStatic,
		],
	},
	{
		title: 'Módulos',
		id: 'Module',
		icon: 'cubes',
		tooltip: 'module',
		signs: [
			signs.reservedImport,
			signs.reservedFrom,
			signs.reservedAs,
			signs.reservedExport,
		],
	},
	{
		title: 'Outros',
		id: 'Other',
		icon: 'icons',
		tooltip: 'other',
		signs: [
			signs.semicolon,
			signs.comma,
			signs.spreadOrRest,
			signs.commentLine,
			signs.commentBlockBegin,
			signs.commentHashbang,
		],
	},
	*/
];
